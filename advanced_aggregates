--- DAILY COUNTS (daily count of orders) ---
--- convert timestamps to dates, and count the Orders Per Date ---
select DATE(ordered_at), count(1)
from orders
group by 1
order by 1;

--- DAILY REVENUE ---
--- join order_items because that table has an amount_paid column representing revenue ---
select DATE(ordered_at), round(sum(amount_paid), 2)
from orders
join order_items 
  on orders.id = order_items.order_id
group by 1
order by 1;

--- DAILY REVENUE FOR KALE SMOOTHIE ---
select date(ordered_at), round(sum(amount_paid), 2)
from orders
join order_items on 
  orders.id = order_items.order_id
where name = "kale-smoothie"
group by 1
order by 1;

>> DAILY SUM CONCLUSION: Those numbers are pretty low! A typical day has thousands in revenue but a small portion of that is coming from kale smoothies. <<


---------------------------------------------------------------------------------------------


--- MEAL SUMS (sum the products by price) ---
--- get the total revenue of each item (row) ---
select name, round(sum(amount_paid), 2)
from order_items
group by name
order by 2 desc;

--- PRODUCT SUM 2 (using a subquery) ---
--- get the percentage & denominator (total revenue) from order_items column ---
select name, round(sum(amount_paid) / 
   (select sum (amount_paid) from order_items) * 100.0, 2) as pct <--- subquery
from order_items
group by name
order by 2 desc;

>> PRODUCT SUM CONSLUSION: kale smoothies are not bringing in the money. And from the analysis, we found what
might be a trend - several of the other low performing products are also smoothies. <<


---------------------------------------------------------------------------------------------





