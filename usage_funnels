CREATING FUNNEL USING SINGLE TABLE

--- COMPARE FUNNELS FOR A/B TESTS ---
>>> control and variant version of pop-ups
>>> comparing the funnels between the 2 versions

1. Total number of users completing each step of the funnel (combination of control and variant groups)

select modal_text, count(distinct user_id)
from onboarding_modals
group by 1
order by 1;

2. Determining the control & variant group 
>>> use case statement

SELECT modal_text,
  COUNT(DISTINCT CASE                                 <---- USE OF CASE STATEMENT
    WHEN ab_group = 'control' THEN user_id
    END) AS 'control_clicks',
  COUNT(DISTINCT CASE
    WHEN ab_group = "variant" THEN user_id
    END) AS "variant_clicks"
FROM onboarding_modals
GROUP BY 1
ORDER BY 1;

*** The result should have three columns: modal_text, control_clicks, variant_clicks

-----------------------------------------------------------------------------------------------------------------------------------

--- BUILD FUNNEL FROM MULTIPLE TABLES USING LEFT JOIN ---
>>> If we use an INNER JOIN to create this table, we’ll lose information from any customer who does not have a row in the checkout or purchase table.
>>> Therefore, we will use LEFT JOIN

1. Combine the information from the three tables (browse, checkout, purchase) into one table.

select 
  distinct b.browse_date,
  b.user_id,
  c.user_id IS NOT NULL as "is_checkout",
  p.user_id IS NOT NULL as "is_purchase"
from browse as "b"
left join checkout as "c"              <---- USE OF LEFT JOIN
  on c.user_id = b.user_id
left join purchase as "p"
  on p.user_id = b.user_id
limit 50;

2. Query from previous funnel and Calculate overall conversion rates

WITH funnels AS (
  SELECT                                           <---- using previous query as WITH statement
     DISTINCT b.browse_date,
     b.user_id,
     c.user_id IS NOT NULL AS 'is_checkout',
     p.user_id IS NOT NULL AS 'is_purchase'
  FROM browse AS 'b'
  LEFT JOIN checkout AS 'c'
    ON c.user_id = b.user_id
  LEFT JOIN purchase AS 'p'
    ON p.user_id = c.user_id)
SELECT 
  count(*) as "num_browse",                                               <---- number of users in the “browse” step of the funnel
  sum(is_checkout) as "num_checkout",                                     <---- number of users in the “checkout” step of the funnel
  sum(is_purchase) as "num_purchase",                                     <---- number of users in the “purchase” step of the funnel
  1.0 * sum(is_checkout) / count(user_id) as "% browse to checkout",      <---- % of users from browse to checkout
  1.0 * sum(is_purchase) / sum(is_checkout) as "% checkout to purchase"   <---- % of users from checkout to purchase
from funnels;

*** We are dividing the sum of is_checkout by the count of user_id. Then, we are multiplying this answer by 1.0.
*** By default, mathematical operations between integers will round down to the closest integer. 
*** In order to avoid a rounded result, it’s a common practice to multiply the result by 1.0. 
*** Doing this will result in a decimal number rather than an integer.

3. Calculate the funnel for each browse_date using GROUP BY
>>> Conversion from checkout to purchase changes as the browse_date gets closer to Christmas Day

WITH funnels AS (
  SELECT DISTINCT b.browse_date,
     b.user_id,
     c.user_id IS NOT NULL AS 'is_checkout',
     p.user_id IS NOT NULL AS 'is_purchase'
  FROM browse AS 'b'
  LEFT JOIN checkout AS 'c'
    ON c.user_id = b.user_id
  LEFT JOIN purchase AS 'p'
    ON p.user_id = c.user_id)
SELECT 
   browse_date,                                 <---- adding browse_date in the first column
   COUNT(*) AS 'num_browse',
   SUM(is_checkout) AS 'num_checkout',
   SUM(is_purchase) AS 'num_purchase',
   1.0 * SUM(is_checkout) / COUNT(user_id) AS 'browse_to_checkout',
   1.0 * SUM(is_purchase) / SUM(is_checkout) AS 'checkout_to_purchase'
FROM funnels
GROUP BY browse_date                            <---- use GROUP BY so that we calculate num_browse, num_checkout, and num_purchase for each browse_date
ORDER BY browse_date;                           <---- ORDER BY browse_date

*** Conversion from checkout to purchase increases from 80% on 12/20 to 94% on 12/23!
